name: Java CI/CD with Gradle & SSM Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./back/gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build with Gradle Wrapper
        run: ./back/gradlew -p back build

      - name: Upload JAR to S3
        env:
          AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:            ${{ secrets.AWS_REGION }}
          S3_BUCKET:             ${{ secrets.S3_BUCKET }}
        run: |
          JAR=$(find back/build/libs -type f -name "*.jar" ! -name "*plain.jar" | head -n 1)
          echo "Found jar file: $JAR"          
          aws s3 cp "$JAR" "s3://$S3_BUCKET/app.jar"

      - name: Upload deploy.sh to S3
        env:
          AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION:            ${{ secrets.AWS_REGION }}
          S3_BUCKET:             ${{ secrets.S3_BUCKET }}
        run: |
          aws s3 cp ./scripts/deploy.sh s3://$S3_BUCKET/deploy.sh

  deploy:
    name: Deploy to EC2 via SSM
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Trigger EC2 Deploy Script via SSM
        run: |
          aws ssm send-command \
          --document-name "AWS-RunShellScript" \
          --targets "Key=instanceIds,Values=${{ secrets.EC2_INSTANCE_ID }}" \
          --parameters "commands=[
            \"aws s3 cp s3://${{ secrets.S3_BUCKET }}/deploy.sh /home/ec2-user/deploy.sh\",
            \"chmod +x /home/ec2-user/deploy.sh\",
            \"sudo -u ec2-user bash -c 'S3_BUCKET=${{ secrets.S3_BUCKET }} bash /home/ec2-user/deploy.sh'\"
          ]" \
          --comment "GitHub Actions deployment" \
          --region ${{ secrets.AWS_REGION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}